---
# Assumes the following are already created:
#  - Route53 Hosted Zones be created if doing a CloudFront distribution
#  - an ACM cert be provisioned in the same region
Description: SSL Enabled S3 Website with an optional CloudFront Distribution

Parameters:

  SiteUrl:
    Description: Website URL to use
    Type: String
    Default: blog.medgelabs.io

  DomainName:
    Description: Route53 Domain to register with
    Type: String
    Default: "medgelabs.io."

  HostedZoneId:
    Description: HostedZoneId in Route53
    Type: String

  SslCertArn:
    Description: ARN of the ACM Certificate to use to enable SSL
    Type: String

Resources:

  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SiteUrl
      VersioningConfiguration:
        Status: Suspended
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
        RoutingRules:
          - RedirectRule:
              ReplaceKeyWith: index.html
            RoutingRuleCondition:
              KeyPrefixEquals: "/"
      Tags:
        - Key: app
          Value: !Ref SiteUrl

  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement:
          -
            Effect: Allow
            Action:
              - s3:GetObject
            Resource: !Sub "arn:aws:s3:::${WebsiteBucket}/*"
            Principal:
              AWS:
                - !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}"

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref SiteUrl

  CloudFrontWebsite:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref SiteUrl
        Origins:
          - DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            Id: !Ref WebsiteBucket
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        Enabled: true
        HttpVersion: http2
        Comment: !Ref SiteUrl
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          DefaultTTL: 300
          MaxTTL: 1800
          MinTTL: 0
          TargetOriginId: !Ref WebsiteBucket
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref SslCertArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2018
      Tags:
        - Key: app
          Value: !Ref SiteUrl

  Route53RecordSetWithCloudFront:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref SiteUrl
      Type: A
      HostedZoneId: !Ref HostedZoneId
      AliasTarget:
        DNSName: !GetAtt CloudFrontWebsite.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # Cloudfront Hosted Zone ID
        EvaluateTargetHealth: false

Outputs:

  DomainName:
    Description: URL Domain for the deployed website
    Value: !Ref SiteUrl

  WebsiteBucketUrl:
    Description: S3 bucket used as the website root
    Value: !GetAtt WebsiteBucket.WebsiteURL

  BucketName:
    Description: Name of the created S3 bucket.
    Value: !Ref WebsiteBucket
